; SLIME 2015-10-18; compiling file "/home/makinori/program/lisp/sanmoku/n_moku.lisp" (written 02 FEB 2016 12:23:46 AM):

; file: /home/makinori/program/lisp/sanmoku/n_moku.lisp
; in: DEFUN HUMAN-VS-HUMAN
;     (DEFUN HUMAN-VS-HUMAN (TREE) NIL)
; --> PROGN EVAL-WHEN 
; ==>
;   (SB-IMPL::%DEFUN 'HUMAN-VS-HUMAN
;                    (SB-INT:NAMED-LAMBDA HUMAN-VS-HUMAN
;                        (TREE)
;                      (BLOCK HUMAN-VS-HUMAN NIL))
;                    NIL 'NIL (SB-C:SOURCE-LOCATION))
; 
; caught STYLE-WARNING:
;   The variable TREE is defined but never used.

; in: DEFUN CONCAT
;     (DEFUN CONCAT (LIST))
; --> PROGN EVAL-WHEN 
; ==>
;   (SB-IMPL::%DEFUN 'CONCAT
;                    (SB-INT:NAMED-LAMBDA CONCAT
;                        (LIST)
;                      (BLOCK CONCAT))
;                    NIL 'NIL (SB-C:SOURCE-LOCATION))
; 
; caught STYLE-WARNING:
;   The variable LIST is defined but never used.

; in: DEFUN GAME-TREE-LAST-LENGHT
;     #'(LAMBDA (N M) M)
; 
; caught STYLE-WARNING:
;   The variable N is defined but never used.
; 
; compilation unit finished
;   caught 3 STYLE-WARNING conditions

; /home/makinori/program/lisp/sanmoku/n_moku.fasl written
; compilation finished in 0:00:00.100
; compiling (DEFUN GAME-TREE-LAST-LENGHT ...)

; file: /tmp/file9crfUd
; in: DEFUN GAME-TREE-LAST-LENGHT
;     #'(LAMBDA (N M) M)
; 
; caught STYLE-WARNING:
;   The variable N is defined but never used.
; 
; compilation unit finished
;   caught 1 STYLE-WARNING condition

CL-USER> (game-tree *player-a* '() *default-board*)
(1 NIL #(0 0 0 0)
 ((2 0 #(1 0 0 0)
   ((1 1 #(1 2 0 0)
     ((2 2 #(1 2 1 0) ((1 3 #(1 2 1 2) NIL)))
      (2 3 #(1 2 0 1) ((1 2 #(1 2 2 1) NIL)))))
    (1 2 #(1 0 2 0)
     ((2 1 #(1 1 2 0) ((1 3 #(1 1 2 2) NIL)))
      (2 3 #(1 0 2 1) ((1 1 #(1 2 2 1) NIL)))))
    (1 3 #(1 0 0 2)
     ((2 1 #(1 1 0 2) ((1 2 #(1 1 2 2) NIL)))
      (2 2 #(1 0 1 2) ((1 1 #(1 2 1 2) NIL)))))))
  (2 1 #(0 1 0 0)
   ((1 0 #(2 1 0 0)
     ((2 2 #(2 1 1 0) ((1 3 #(2 1 1 2) NIL)))
      (2 3 #(2 1 0 1) ((1 2 #(2 1 2 1) NIL)))))
    (1 2 #(0 1 2 0)
     ((2 0 #(1 1 2 0) ((1 3 #(1 1 2 2) NIL)))
      (2 3 #(0 1 2 1) ((1 0 #(2 1 2 1) NIL)))))
    (1 3 #(0 1 0 2)
     ((2 0 #(1 1 0 2) ((1 2 #(1 1 2 2) NIL)))
      (2 2 #(0 1 1 2) ((1 0 #(2 1 1 2) NIL)))))))
  (2 2 #(0 0 1 0)
   ((1 0 #(2 0 1 0)
     ((2 1 #(2 1 1 0) ((1 3 #(2 1 1 2) NIL)))
      (2 3 #(2 0 1 1) ((1 1 #(2 2 1 1) NIL)))))
    (1 1 #(0 2 1 0)
     ((2 0 #(1 2 1 0) ((1 3 #(1 2 1 2) NIL)))
      (2 3 #(0 2 1 1) ((1 0 #(2 2 1 1) NIL)))))
    (1 3 #(0 0 1 2)
     ((2 0 #(1 0 1 2) ((1 1 #(1 2 1 2) NIL)))
      (2 1 #(0 1 1 2) ((1 0 #(2 1 1 2) NIL)))))))
  (2 3 #(0 0 0 1)
   ((1 0 #(2 0 0 1)
     ((2 1 #(2 1 0 1) ((1 2 #(2 1 2 1) NIL)))
      (2 2 #(2 0 1 1) ((1 1 #(2 2 1 1) NIL)))))
    (1 1 #(0 2 0 1)
     ((2 0 #(1 2 0 1) ((1 2 #(1 2 2 1) NIL)))
      (2 2 #(0 2 1 1) ((1 0 #(2 2 1 1) NIL)))))
    (1 2 #(0 0 2 1)
     ((2 0 #(1 0 2 1) ((1 1 #(1 2 2 1) NIL)))
      (2 1 #(0 1 2 1) ((1 0 #(2 1 2 1) NIL)))))))))
CL-USER> (game-tree-last-lenght (game-tree *player-a* '() *default-board*))
((2 0 #(1 0 0 0)
  ((1 1 #(1 2 0 0)
    ((2 2 #(1 2 1 0) ((1 3 #(1 2 1 2) NIL)))
     (2 3 #(1 2 0 1) ((1 2 #(1 2 2 1) NIL)))))
   (1 2 #(1 0 2 0)
    ((2 1 #(1 1 2 0) ((1 3 #(1 1 2 2) NIL)))
     (2 3 #(1 0 2 1) ((1 1 #(1 2 2 1) NIL)))))
   (1 3 #(1 0 0 2)
    ((2 1 #(1 1 0 2) ((1 2 #(1 1 2 2) NIL)))
     (2 2 #(1 0 1 2) ((1 1 #(1 2 1 2) NIL)))))))
 (2 1 #(0 1 0 0)
  ((1 0 #(2 1 0 0)
    ((2 2 #(2 1 1 0) ((1 3 #(2 1 1 2) NIL)))
     (2 3 #(2 1 0 1) ((1 2 #(2 1 2 1) NIL)))))
   (1 2 #(0 1 2 0)
    ((2 0 #(1 1 2 0) ((1 3 #(1 1 2 2) NIL)))
     (2 3 #(0 1 2 1) ((1 0 #(2 1 2 1) NIL)))))
   (1 3 #(0 1 0 2)
    ((2 0 #(1 1 0 2) ((1 2 #(1 1 2 2) NIL)))
     (2 2 #(0 1 1 2) ((1 0 #(2 1 1 2) NIL)))))))
 (2 2 #(0 0 1 0)
  ((1 0 #(2 0 1 0)
    ((2 1 #(2 1 1 0) ((1 3 #(2 1 1 2) NIL)))
     (2 3 #(2 0 1 1) ((1 1 #(2 2 1 1) NIL)))))
   (1 1 #(0 2 1 0)
    ((2 0 #(1 2 1 0) ((1 3 #(1 2 1 2) NIL)))
     (2 3 #(0 2 1 1) ((1 0 #(2 2 1 1) NIL)))))
   (1 3 #(0 0 1 2)
    ((2 0 #(1 0 1 2) ((1 1 #(1 2 1 2) NIL)))
     (2 1 #(0 1 1 2) ((1 0 #(2 1 1 2) NIL)))))))
 (2 3 #(0 0 0 1)
  ((1 0 #(2 0 0 1)
    ((2 1 #(2 1 0 1) ((1 2 #(2 1 2 1) NIL)))
     (2 2 #(2 0 1 1) ((1 1 #(2 2 1 1) NIL)))))
   (1 1 #(0 2 0 1)
    ((2 0 #(1 2 0 1) ((1 2 #(1 2 2 1) NIL)))
     (2 2 #(0 2 1 1) ((1 0 #(2 2 1 1) NIL)))))
   (1 2 #(0 0 2 1)
    ((2 0 #(1 0 2 1) ((1 1 #(1 2 2 1) NIL)))
     (2 1 #(0 1 2 1) ((1 0 #(2 1 2 1) NIL))))))))
; compiling (DEFUN GAME-TREE-LAST-LENGHT ...)

; file: /tmp/filePPxhEx
; in: DEFUN GAME-TREE-LAST-LENGHT
;     (IF NULL
;         TR
;         1
;         (GAME-TREE-LAST-LENGHT TREE))
; 
; caught ERROR:
;   error while parsing arguments to special form IF:
;     invalid number of elements in
;       (NULL TR 1 (GAME-TREE-LAST-LENGHT TREE))
;     to satisfy lambda list
;       (SB-C::TEST SB-C::THEN &OPTIONAL SB-C::ELSE):
;     between 2 and 3 expected, but 4 found

;     #'(LAMBDA (TR)
;         (IF NULL
;             TR
;             1
;             (GAME-TREE-LAST-LENGHT TREE)))
; 
; caught STYLE-WARNING:
;   The variable TR is defined but never used.
; 
; compilation unit finished
;   caught 1 ERROR condition
;   caught 1 STYLE-WARNING condition
; compiling (DEFUN GAME-TREE-LAST-LENGHT ...)

; file: /tmp/filexUaOY3
; in: DEFUN GAME-TREE-LAST-LENGHT
;     (IF NULL
;         TR
;         1
;         (GAME-TREE-LAST-LENGHT TR))
; 
; caught ERROR:
;   error while parsing arguments to special form IF:
;     invalid number of elements in
;       (NULL TR 1 (GAME-TREE-LAST-LENGHT TR))
;     to satisfy lambda list
;       (SB-C::TEST SB-C::THEN &OPTIONAL SB-C::ELSE):
;     between 2 and 3 expected, but 4 found

;     #'(LAMBDA (TR)
;         (IF NULL
;             TR
;             1
;             (GAME-TREE-LAST-LENGHT TR)))
; 
; caught STYLE-WARNING:
;   The variable TR is defined but never used.
; 
; compilation unit finished
;   caught 1 ERROR condition
;   caught 1 STYLE-WARNING condition
; compiling (DEFUN GAME-TREE-LAST-LENGHT ...)
CL-USER> (game-tree-last-lenght (game-tree *player-a* '() *default-board*))

; compiling (DEFUN GAME-TREE-LAST-LENGHT ...)

; file: /tmp/fileHEWKNy
; in: DEFUN GAME-TREE-LAST-LENGHT
;     (SUM (GAME-TREE-LAST-LENGHT TR))
; 
; caught STYLE-WARNING:
;   undefined function: SUM
; 
; compilation unit finished
;   Undefined function:
;     SUM
;   caught 1 STYLE-WARNING condition
; compiling (DEFUN GAME-TREE-LAST-LENGHT ...); Evaluation aborted on #<TYPE-ERROR expected-type: LIST datum: 1>.
CL-USER> (game-tree-last-lenght (game-tree *player-a* '() *default-board*))

; compiling (DEFUN GAME-TREE-LAST-LENGHT ...); Evaluation aborted on #<TYPE-ERROR expected-type: LIST datum: 1>.
CL-USER> (game-tree-last-lenght (game-tree *player-a* '() *default-board*))

; compiling (DEFUN GAME-TREE-LAST-LENGHT ...); Evaluation aborted on #<TYPE-ERROR expected-type: LIST datum: 1>.
CL-USER> (game-tree-last-lenght (game-tree *player-a* '() *default-board*))

; compiling (DEFUN GAME-TREE-LAST-LENGHT ...); Evaluation aborted on #<TYPE-ERROR expected-type: LIST datum: 1>.
CL-USER> (game-tree-last-lenght (game-tree *player-a* '() *default-board*))

(((((((((1)))))))))
CL-USER> (game-tree *player-a* '() *default-board*)
(1 NIL #(0 0 0 0)
 ((2 0 #(1 0 0 0)
   ((1 1 #(1 2 0 0)
     ((2 2 #(1 2 1 0) ((1 3 #(1 2 1 2) NIL)))
      (2 3 #(1 2 0 1) ((1 2 #(1 2 2 1) NIL)))))
    (1 2 #(1 0 2 0)
     ((2 1 #(1 1 2 0) ((1 3 #(1 1 2 2) NIL)))
      (2 3 #(1 0 2 1) ((1 1 #(1 2 2 1) NIL)))))
    (1 3 #(1 0 0 2)
     ((2 1 #(1 1 0 2) ((1 2 #(1 1 2 2) NIL)))
      (2 2 #(1 0 1 2) ((1 1 #(1 2 1 2) NIL)))))))
  (2 1 #(0 1 0 0)
   ((1 0 #(2 1 0 0)
     ((2 2 #(2 1 1 0) ((1 3 #(2 1 1 2) NIL)))
      (2 3 #(2 1 0 1) ((1 2 #(2 1 2 1) NIL)))))
    (1 2 #(0 1 2 0)
     ((2 0 #(1 1 2 0) ((1 3 #(1 1 2 2) NIL)))
      (2 3 #(0 1 2 1) ((1 0 #(2 1 2 1) NIL)))))
    (1 3 #(0 1 0 2)
     ((2 0 #(1 1 0 2) ((1 2 #(1 1 2 2) NIL)))
      (2 2 #(0 1 1 2) ((1 0 #(2 1 1 2) NIL)))))))
  (2 2 #(0 0 1 0)
   ((1 0 #(2 0 1 0)
     ((2 1 #(2 1 1 0) ((1 3 #(2 1 1 2) NIL)))
      (2 3 #(2 0 1 1) ((1 1 #(2 2 1 1) NIL)))))
    (1 1 #(0 2 1 0)
     ((2 0 #(1 2 1 0) ((1 3 #(1 2 1 2) NIL)))
      (2 3 #(0 2 1 1) ((1 0 #(2 2 1 1) NIL)))))
    (1 3 #(0 0 1 2)
     ((2 0 #(1 0 1 2) ((1 1 #(1 2 1 2) NIL)))
      (2 1 #(0 1 1 2) ((1 0 #(2 1 1 2) NIL)))))))
  (2 3 #(0 0 0 1)
   ((1 0 #(2 0 0 1)
     ((2 1 #(2 1 0 1) ((1 2 #(2 1 2 1) NIL)))
      (2 2 #(2 0 1 1) ((1 1 #(2 2 1 1) NIL)))))
    (1 1 #(0 2 0 1)
     ((2 0 #(1 2 0 1) ((1 2 #(1 2 2 1) NIL)))
      (2 2 #(0 2 1 1) ((1 0 #(2 2 1 1) NIL)))))
    (1 2 #(0 0 2 1)
     ((2 0 #(1 0 2 1) ((1 1 #(1 2 2 1) NIL)))
      (2 1 #(0 1 2 1) ((1 0 #(2 1 2 1) NIL)))))))))
CL-USER> (last (game-tree *player-a* '() *default-board*))
(((2 0 #(1 0 0 0)
   ((1 1 #(1 2 0 0)
     ((2 2 #(1 2 1 0) ((1 3 #(1 2 1 2) NIL)))
      (2 3 #(1 2 0 1) ((1 2 #(1 2 2 1) NIL)))))
    (1 2 #(1 0 2 0)
     ((2 1 #(1 1 2 0) ((1 3 #(1 1 2 2) NIL)))
      (2 3 #(1 0 2 1) ((1 1 #(1 2 2 1) NIL)))))
    (1 3 #(1 0 0 2)
     ((2 1 #(1 1 0 2) ((1 2 #(1 1 2 2) NIL)))
      (2 2 #(1 0 1 2) ((1 1 #(1 2 1 2) NIL)))))))
  (2 1 #(0 1 0 0)
   ((1 0 #(2 1 0 0)
     ((2 2 #(2 1 1 0) ((1 3 #(2 1 1 2) NIL)))
      (2 3 #(2 1 0 1) ((1 2 #(2 1 2 1) NIL)))))
    (1 2 #(0 1 2 0)
     ((2 0 #(1 1 2 0) ((1 3 #(1 1 2 2) NIL)))
      (2 3 #(0 1 2 1) ((1 0 #(2 1 2 1) NIL)))))
    (1 3 #(0 1 0 2)
     ((2 0 #(1 1 0 2) ((1 2 #(1 1 2 2) NIL)))
      (2 2 #(0 1 1 2) ((1 0 #(2 1 1 2) NIL)))))))
  (2 2 #(0 0 1 0)
   ((1 0 #(2 0 1 0)
     ((2 1 #(2 1 1 0) ((1 3 #(2 1 1 2) NIL)))
      (2 3 #(2 0 1 1) ((1 1 #(2 2 1 1) NIL)))))
    (1 1 #(0 2 1 0)
     ((2 0 #(1 2 1 0) ((1 3 #(1 2 1 2) NIL)))
      (2 3 #(0 2 1 1) ((1 0 #(2 2 1 1) NIL)))))
    (1 3 #(0 0 1 2)
     ((2 0 #(1 0 1 2) ((1 1 #(1 2 1 2) NIL)))
      (2 1 #(0 1 1 2) ((1 0 #(2 1 1 2) NIL)))))))
  (2 3 #(0 0 0 1)
   ((1 0 #(2 0 0 1)
     ((2 1 #(2 1 0 1) ((1 2 #(2 1 2 1) NIL)))
      (2 2 #(2 0 1 1) ((1 1 #(2 2 1 1) NIL)))))
    (1 1 #(0 2 0 1)
     ((2 0 #(1 2 0 1) ((1 2 #(1 2 2 1) NIL)))
      (2 2 #(0 2 1 1) ((1 0 #(2 2 1 1) NIL)))))
    (1 2 #(0 0 2 1)
     ((2 0 #(1 0 2 1) ((1 1 #(1 2 2 1) NIL)))
      (2 1 #(0 1 2 1) ((1 0 #(2 1 2 1) NIL)))))))))
CL-USER> (car (last (game-tree *player-a* '() *default-board*)))
((2 0 #(1 0 0 0)
  ((1 1 #(1 2 0 0)
    ((2 2 #(1 2 1 0) ((1 3 #(1 2 1 2) NIL)))
     (2 3 #(1 2 0 1) ((1 2 #(1 2 2 1) NIL)))))
   (1 2 #(1 0 2 0)
    ((2 1 #(1 1 2 0) ((1 3 #(1 1 2 2) NIL)))
     (2 3 #(1 0 2 1) ((1 1 #(1 2 2 1) NIL)))))
   (1 3 #(1 0 0 2)
    ((2 1 #(1 1 0 2) ((1 2 #(1 1 2 2) NIL)))
     (2 2 #(1 0 1 2) ((1 1 #(1 2 1 2) NIL)))))))
 (2 1 #(0 1 0 0)
  ((1 0 #(2 1 0 0)
    ((2 2 #(2 1 1 0) ((1 3 #(2 1 1 2) NIL)))
     (2 3 #(2 1 0 1) ((1 2 #(2 1 2 1) NIL)))))
   (1 2 #(0 1 2 0)
    ((2 0 #(1 1 2 0) ((1 3 #(1 1 2 2) NIL)))
     (2 3 #(0 1 2 1) ((1 0 #(2 1 2 1) NIL)))))
   (1 3 #(0 1 0 2)
    ((2 0 #(1 1 0 2) ((1 2 #(1 1 2 2) NIL)))
     (2 2 #(0 1 1 2) ((1 0 #(2 1 1 2) NIL)))))))
 (2 2 #(0 0 1 0)
  ((1 0 #(2 0 1 0)
    ((2 1 #(2 1 1 0) ((1 3 #(2 1 1 2) NIL)))
     (2 3 #(2 0 1 1) ((1 1 #(2 2 1 1) NIL)))))
   (1 1 #(0 2 1 0)
    ((2 0 #(1 2 1 0) ((1 3 #(1 2 1 2) NIL)))
     (2 3 #(0 2 1 1) ((1 0 #(2 2 1 1) NIL)))))
   (1 3 #(0 0 1 2)
    ((2 0 #(1 0 1 2) ((1 1 #(1 2 1 2) NIL)))
     (2 1 #(0 1 1 2) ((1 0 #(2 1 1 2) NIL)))))))
 (2 3 #(0 0 0 1)
  ((1 0 #(2 0 0 1)
    ((2 1 #(2 1 0 1) ((1 2 #(2 1 2 1) NIL)))
     (2 2 #(2 0 1 1) ((1 1 #(2 2 1 1) NIL)))))
   (1 1 #(0 2 0 1)
    ((2 0 #(1 2 0 1) ((1 2 #(1 2 2 1) NIL)))
     (2 2 #(0 2 1 1) ((1 0 #(2 2 1 1) NIL)))))
   (1 2 #(0 0 2 1)
    ((2 0 #(1 0 2 1) ((1 1 #(1 2 2 1) NIL)))
     (2 1 #(0 1 2 1) ((1 0 #(2 1 2 1) NIL))))))))
; compiling (DEFUN GAME-TREE-LAST-LENGHT ...)
CL-USER> (game-tree *player-a* '() *default-board*)

(1 NIL #(0 0 0 0)
 ((2 0 #(1 0 0 0)
   ((1 1 #(1 2 0 0)
     ((2 2 #(1 2 1 0) ((1 3 #(1 2 1 2) NIL)))
      (2 3 #(1 2 0 1) ((1 2 #(1 2 2 1) NIL)))))
    (1 2 #(1 0 2 0)
     ((2 1 #(1 1 2 0) ((1 3 #(1 1 2 2) NIL)))
      (2 3 #(1 0 2 1) ((1 1 #(1 2 2 1) NIL)))))
    (1 3 #(1 0 0 2)
     ((2 1 #(1 1 0 2) ((1 2 #(1 1 2 2) NIL)))
      (2 2 #(1 0 1 2) ((1 1 #(1 2 1 2) NIL)))))))
  (2 1 #(0 1 0 0)
   ((1 0 #(2 1 0 0)
     ((2 2 #(2 1 1 0) ((1 3 #(2 1 1 2) NIL)))
      (2 3 #(2 1 0 1) ((1 2 #(2 1 2 1) NIL)))))
    (1 2 #(0 1 2 0)
     ((2 0 #(1 1 2 0) ((1 3 #(1 1 2 2) NIL)))
      (2 3 #(0 1 2 1) ((1 0 #(2 1 2 1) NIL)))))
    (1 3 #(0 1 0 2)
     ((2 0 #(1 1 0 2) ((1 2 #(1 1 2 2) NIL)))
      (2 2 #(0 1 1 2) ((1 0 #(2 1 1 2) NIL)))))))
  (2 2 #(0 0 1 0)
   ((1 0 #(2 0 1 0)
     ((2 1 #(2 1 1 0) ((1 3 #(2 1 1 2) NIL)))
      (2 3 #(2 0 1 1) ((1 1 #(2 2 1 1) NIL)))))
    (1 1 #(0 2 1 0)
     ((2 0 #(1 2 1 0) ((1 3 #(1 2 1 2) NIL)))
      (2 3 #(0 2 1 1) ((1 0 #(2 2 1 1) NIL)))))
    (1 3 #(0 0 1 2)
     ((2 0 #(1 0 1 2) ((1 1 #(1 2 1 2) NIL)))
      (2 1 #(0 1 1 2) ((1 0 #(2 1 1 2) NIL)))))))
  (2 3 #(0 0 0 1)
   ((1 0 #(2 0 0 1)
     ((2 1 #(2 1 0 1) ((1 2 #(2 1 2 1) NIL)))
      (2 2 #(2 0 1 1) ((1 1 #(2 2 1 1) NIL)))))
    (1 1 #(0 2 0 1)
     ((2 0 #(1 2 0 1) ((1 2 #(1 2 2 1) NIL)))
      (2 2 #(0 2 1 1) ((1 0 #(2 2 1 1) NIL)))))
    (1 2 #(0 0 2 1)
     ((2 0 #(1 0 2 1) ((1 1 #(1 2 2 1) NIL)))
      (2 1 #(0 1 2 1) ((1 0 #(2 1 2 1) NIL)))))))))
CL-USER> (game-tree-last-lenght (game-tree *player-a* '() *default-board*))
((((NIL) (NIL)) ((NIL) (NIL)) ((NIL) (NIL)))
 (((NIL) (NIL)) ((NIL) (NIL)) ((NIL) (NIL)))
 (((NIL) (NIL)) ((NIL) (NIL)) ((NIL) (NIL)))
 (((NIL) (NIL)) ((NIL) (NIL)) ((NIL) (NIL))))
; compiling (DEFUN GAME-TREE-LAST-LENGHT ...)
CL-USER> (game-tree-last-lenght (game-tree *player-a* '() *default-board*))

NIL
; compiling (DEFUN GAME-TREE-LAST-LENGHT ...)
CL-USER> (game-tree-last-lenght (game-tree *player-a* '() *default-board*))

; compiling (DEFUN GAME-TREE-LAST-LENGHT ...); Evaluation aborted on #<TYPE-ERROR expected-type: SEQUENCE datum: 0>.
CL-USER> (game-tree-last-lenght (game-tree *player-a* '() *default-board*))

NIL
; compiling (DEFUN GAME-TREE-LAST-LENGHT ...)
CL-USER> (game-tree-last-lenght (game-tree *player-a* '() *default-board*))

; compiling (DEFUN GAME-TREE-LAST-LENGHT ...); Evaluation aborted on #<TYPE-ERROR expected-type: SEQUENCE datum: 0>.
CL-USER> (game-tree-last-lenght (game-tree *player-a* '() *default-board*))

0
; compiling (DEFUN GAME-TREE-LAST-LENGHT ...)
CL-USER> (game-tree-last-lenght (game-tree *player-a* '() *default-board*))

((((NIL) (NIL)) ((NIL) (NIL)) ((NIL) (NIL)))
 (((NIL) (NIL)) ((NIL) (NIL)) ((NIL) (NIL)))
 (((NIL) (NIL)) ((NIL) (NIL)) ((NIL) (NIL)))
 (((NIL) (NIL)) ((NIL) (NIL)) ((NIL) (NIL))))
; compiling (DEFUN GAME-TREE-LAST-LENGHT ...)
CL-USER> (game-tree-last-lenght (game-tree *player-a* '() *default-board*))

((((NIL) (NIL)) ((NIL) (NIL)) ((NIL) (NIL)))
 (((NIL) (NIL)) ((NIL) (NIL)) ((NIL) (NIL)))
 (((NIL) (NIL)) ((NIL) (NIL)) ((NIL) (NIL)))
 (((NIL) (NIL)) ((NIL) (NIL)) ((NIL) (NIL))))
; compiling (DEFUN GAME-TREE-LAST-LENGHT ...)
CL-USER> (game-tree-last-lenght (game-tree *player-a* '() *default-board*))

((((NIL) (NIL)) ((NIL) (NIL)) ((NIL) (NIL)))
 (((NIL) (NIL)) ((NIL) (NIL)) ((NIL) (NIL)))
 (((NIL) (NIL)) ((NIL) (NIL)) ((NIL) (NIL)))
 (((NIL) (NIL)) ((NIL) (NIL)) ((NIL) (NIL))))
; compiling (DEFUN GAME-TREE-LAST-LENGHT ...)
CL-USER> (game-tree-last-lenght (game-tree *player-a* '() *default-board*))

((((NIL) (NIL)) ((NIL) (NIL)) ((NIL) (NIL)))
 (((NIL) (NIL)) ((NIL) (NIL)) ((NIL) (NIL)))
 (((NIL) (NIL)) ((NIL) (NIL)) ((NIL) (NIL)))
 (((NIL) (NIL)) ((NIL) (NIL)) ((NIL) (NIL))))
; compiling (DEFUN GAME-TREE-LAST-LENGHT ...)
CL-USER> (game-tree-last-lenght (game-tree *player-a* '() *default-board*))

((((NIL) (NIL)) ((NIL) (NIL)) ((NIL) (NIL)))
 (((NIL) (NIL)) ((NIL) (NIL)) ((NIL) (NIL)))
 (((NIL) (NIL)) ((NIL) (NIL)) ((NIL) (NIL)))
 (((NIL) (NIL)) ((NIL) (NIL)) ((NIL) (NIL))))
; compiling (DEFUN GAME-TREE-LAST-LENGHT ...)
CL-USER> (game-tree-last-lenght (game-tree *player-a* '() *default-board*))

NIL
; compiling (DEFUN GAME-TREE-LAST-LENGHT ...)
CL-USER> (game-tree-last-lenght (game-tree *player-a* '() *default-board*))

((((NIL) (NIL)) ((NIL) (NIL)) ((NIL) (NIL)))
 (((NIL) (NIL)) ((NIL) (NIL)) ((NIL) (NIL)))
 (((NIL) (NIL)) ((NIL) (NIL)) ((NIL) (NIL)))
 (((NIL) (NIL)) ((NIL) (NIL)) ((NIL) (NIL))))
; compiling (DEFUN GAME-TREE-LAST-LENGHT ...)
CL-USER> (game-tree-last-lenght (game-tree *player-a* '() *default-board*))

((((NIL) (NIL)) ((NIL) (NIL)) ((NIL) (NIL)))
 (((NIL) (NIL)) ((NIL) (NIL)) ((NIL) (NIL)))
 (((NIL) (NIL)) ((NIL) (NIL)) ((NIL) (NIL)))
 (((NIL) (NIL)) ((NIL) (NIL)) ((NIL) (NIL))))
CL-USER> (game-tree *player-a* '() *default-board*)
(1 NIL #(0 0 0 0)
 ((2 0 #(1 0 0 0)
   ((1 1 #(1 2 0 0)
     ((2 2 #(1 2 1 0) ((1 3 #(1 2 1 2) NIL)))
      (2 3 #(1 2 0 1) ((1 2 #(1 2 2 1) NIL)))))
    (1 2 #(1 0 2 0)
     ((2 1 #(1 1 2 0) ((1 3 #(1 1 2 2) NIL)))
      (2 3 #(1 0 2 1) ((1 1 #(1 2 2 1) NIL)))))
    (1 3 #(1 0 0 2)
     ((2 1 #(1 1 0 2) ((1 2 #(1 1 2 2) NIL)))
      (2 2 #(1 0 1 2) ((1 1 #(1 2 1 2) NIL)))))))
  (2 1 #(0 1 0 0)
   ((1 0 #(2 1 0 0)
     ((2 2 #(2 1 1 0) ((1 3 #(2 1 1 2) NIL)))
      (2 3 #(2 1 0 1) ((1 2 #(2 1 2 1) NIL)))))
    (1 2 #(0 1 2 0)
     ((2 0 #(1 1 2 0) ((1 3 #(1 1 2 2) NIL)))
      (2 3 #(0 1 2 1) ((1 0 #(2 1 2 1) NIL)))))
    (1 3 #(0 1 0 2)
     ((2 0 #(1 1 0 2) ((1 2 #(1 1 2 2) NIL)))
      (2 2 #(0 1 1 2) ((1 0 #(2 1 1 2) NIL)))))))
  (2 2 #(0 0 1 0)
   ((1 0 #(2 0 1 0)
     ((2 1 #(2 1 1 0) ((1 3 #(2 1 1 2) NIL)))
      (2 3 #(2 0 1 1) ((1 1 #(2 2 1 1) NIL)))))
    (1 1 #(0 2 1 0)
     ((2 0 #(1 2 1 0) ((1 3 #(1 2 1 2) NIL)))
      (2 3 #(0 2 1 1) ((1 0 #(2 2 1 1) NIL)))))
    (1 3 #(0 0 1 2)
     ((2 0 #(1 0 1 2) ((1 1 #(1 2 1 2) NIL)))
      (2 1 #(0 1 1 2) ((1 0 #(2 1 1 2) NIL)))))))
  (2 3 #(0 0 0 1)
   ((1 0 #(2 0 0 1)
     ((2 1 #(2 1 0 1) ((1 2 #(2 1 2 1) NIL)))
      (2 2 #(2 0 1 1) ((1 1 #(2 2 1 1) NIL)))))
    (1 1 #(0 2 0 1)
     ((2 0 #(1 2 0 1) ((1 2 #(1 2 2 1) NIL)))
      (2 2 #(0 2 1 1) ((1 0 #(2 2 1 1) NIL)))))
    (1 2 #(0 0 2 1)
     ((2 0 #(1 0 2 1) ((1 1 #(1 2 2 1) NIL)))
      (2 1 #(0 1 2 1) ((1 0 #(2 1 2 1) NIL)))))))))
CL-USER> (car (last (game-tree *player-a* '() *default-board*)))
((2 0 #(1 0 0 0)
  ((1 1 #(1 2 0 0)
    ((2 2 #(1 2 1 0) ((1 3 #(1 2 1 2) NIL)))
     (2 3 #(1 2 0 1) ((1 2 #(1 2 2 1) NIL)))))
   (1 2 #(1 0 2 0)
    ((2 1 #(1 1 2 0) ((1 3 #(1 1 2 2) NIL)))
     (2 3 #(1 0 2 1) ((1 1 #(1 2 2 1) NIL)))))
   (1 3 #(1 0 0 2)
    ((2 1 #(1 1 0 2) ((1 2 #(1 1 2 2) NIL)))
     (2 2 #(1 0 1 2) ((1 1 #(1 2 1 2) NIL)))))))
 (2 1 #(0 1 0 0)
  ((1 0 #(2 1 0 0)
    ((2 2 #(2 1 1 0) ((1 3 #(2 1 1 2) NIL)))
     (2 3 #(2 1 0 1) ((1 2 #(2 1 2 1) NIL)))))
   (1 2 #(0 1 2 0)
    ((2 0 #(1 1 2 0) ((1 3 #(1 1 2 2) NIL)))
     (2 3 #(0 1 2 1) ((1 0 #(2 1 2 1) NIL)))))
   (1 3 #(0 1 0 2)
    ((2 0 #(1 1 0 2) ((1 2 #(1 1 2 2) NIL)))
     (2 2 #(0 1 1 2) ((1 0 #(2 1 1 2) NIL)))))))
 (2 2 #(0 0 1 0)
  ((1 0 #(2 0 1 0)
    ((2 1 #(2 1 1 0) ((1 3 #(2 1 1 2) NIL)))
     (2 3 #(2 0 1 1) ((1 1 #(2 2 1 1) NIL)))))
   (1 1 #(0 2 1 0)
    ((2 0 #(1 2 1 0) ((1 3 #(1 2 1 2) NIL)))
     (2 3 #(0 2 1 1) ((1 0 #(2 2 1 1) NIL)))))
   (1 3 #(0 0 1 2)
    ((2 0 #(1 0 1 2) ((1 1 #(1 2 1 2) NIL)))
     (2 1 #(0 1 1 2) ((1 0 #(2 1 1 2) NIL)))))))
 (2 3 #(0 0 0 1)
  ((1 0 #(2 0 0 1)
    ((2 1 #(2 1 0 1) ((1 2 #(2 1 2 1) NIL)))
     (2 2 #(2 0 1 1) ((1 1 #(2 2 1 1) NIL)))))
   (1 1 #(0 2 0 1)
    ((2 0 #(1 2 0 1) ((1 2 #(1 2 2 1) NIL)))
     (2 2 #(0 2 1 1) ((1 0 #(2 2 1 1) NIL)))))
   (1 2 #(0 0 2 1)
    ((2 0 #(1 0 2 1) ((1 1 #(1 2 2 1) NIL)))
     (2 1 #(0 1 2 1) ((1 0 #(2 1 2 1) NIL))))))))
CL-USER> (car (car (last (game-tree *player-a* '() *default-board*))))
(2 0 #(1 0 0 0)
 ((1 1 #(1 2 0 0)
   ((2 2 #(1 2 1 0) ((1 3 #(1 2 1 2) NIL)))
    (2 3 #(1 2 0 1) ((1 2 #(1 2 2 1) NIL)))))
  (1 2 #(1 0 2 0)
   ((2 1 #(1 1 2 0) ((1 3 #(1 1 2 2) NIL)))
    (2 3 #(1 0 2 1) ((1 1 #(1 2 2 1) NIL)))))
  (1 3 #(1 0 0 2)
   ((2 1 #(1 1 0 2) ((1 2 #(1 1 2 2) NIL)))
    (2 2 #(1 0 1 2) ((1 1 #(1 2 1 2) NIL)))))))
CL-USER> (car (last (game-tree *player-a* '() *default-board*)))
((2 0 #(1 0 0 0)
  ((1 1 #(1 2 0 0)
    ((2 2 #(1 2 1 0) ((1 3 #(1 2 1 2) NIL)))
     (2 3 #(1 2 0 1) ((1 2 #(1 2 2 1) NIL)))))
   (1 2 #(1 0 2 0)
    ((2 1 #(1 1 2 0) ((1 3 #(1 1 2 2) NIL)))
     (2 3 #(1 0 2 1) ((1 1 #(1 2 2 1) NIL)))))
   (1 3 #(1 0 0 2)
    ((2 1 #(1 1 0 2) ((1 2 #(1 1 2 2) NIL)))
     (2 2 #(1 0 1 2) ((1 1 #(1 2 1 2) NIL)))))))
 (2 1 #(0 1 0 0)
  ((1 0 #(2 1 0 0)
    ((2 2 #(2 1 1 0) ((1 3 #(2 1 1 2) NIL)))
     (2 3 #(2 1 0 1) ((1 2 #(2 1 2 1) NIL)))))
   (1 2 #(0 1 2 0)
    ((2 0 #(1 1 2 0) ((1 3 #(1 1 2 2) NIL)))
     (2 3 #(0 1 2 1) ((1 0 #(2 1 2 1) NIL)))))
   (1 3 #(0 1 0 2)
    ((2 0 #(1 1 0 2) ((1 2 #(1 1 2 2) NIL)))
     (2 2 #(0 1 1 2) ((1 0 #(2 1 1 2) NIL)))))))
 (2 2 #(0 0 1 0)
  ((1 0 #(2 0 1 0)
    ((2 1 #(2 1 1 0) ((1 3 #(2 1 1 2) NIL)))
     (2 3 #(2 0 1 1) ((1 1 #(2 2 1 1) NIL)))))
   (1 1 #(0 2 1 0)
    ((2 0 #(1 2 1 0) ((1 3 #(1 2 1 2) NIL)))
     (2 3 #(0 2 1 1) ((1 0 #(2 2 1 1) NIL)))))
   (1 3 #(0 0 1 2)
    ((2 0 #(1 0 1 2) ((1 1 #(1 2 1 2) NIL)))
     (2 1 #(0 1 1 2) ((1 0 #(2 1 1 2) NIL)))))))
 (2 3 #(0 0 0 1)
  ((1 0 #(2 0 0 1)
    ((2 1 #(2 1 0 1) ((1 2 #(2 1 2 1) NIL)))
     (2 2 #(2 0 1 1) ((1 1 #(2 2 1 1) NIL)))))
   (1 1 #(0 2 0 1)
    ((2 0 #(1 2 0 1) ((1 2 #(1 2 2 1) NIL)))
     (2 2 #(0 2 1 1) ((1 0 #(2 2 1 1) NIL)))))
   (1 2 #(0 0 2 1)
    ((2 0 #(1 0 2 1) ((1 1 #(1 2 2 1) NIL)))
     (2 1 #(0 1 2 1) ((1 0 #(2 1 2 1) NIL))))))))
; compiling (DEFUN GAME-TREE-LAST-LENGHT ...)

; file: /tmp/filekU8l31
; in: DEFUN GAME-TREE-LAST-LENGHT
;     (LET ((NEXT-TREE (CAR (LAST TREE))))
;       (MAPCAR #'(LAMBDA (TR) (GAME-TREE-LAST-LENGHT TR)) (CAR (LAST TREE))))
; 
; caught STYLE-WARNING:
;   The variable NEXT-TREE is defined but never used.
; 
; compilation unit finished
;   caught 1 STYLE-WARNING condition
; compiling (DEFUN GAME-TREE-LAST-LENGHT ...)
CL-USER> (car (last (game-tree *player-a* '() *default-board*)))

((2 0 #(1 0 0 0)
  ((1 1 #(1 2 0 0)
    ((2 2 #(1 2 1 0) ((1 3 #(1 2 1 2) NIL)))
     (2 3 #(1 2 0 1) ((1 2 #(1 2 2 1) NIL)))))
   (1 2 #(1 0 2 0)
    ((2 1 #(1 1 2 0) ((1 3 #(1 1 2 2) NIL)))
     (2 3 #(1 0 2 1) ((1 1 #(1 2 2 1) NIL)))))
   (1 3 #(1 0 0 2)
    ((2 1 #(1 1 0 2) ((1 2 #(1 1 2 2) NIL)))
     (2 2 #(1 0 1 2) ((1 1 #(1 2 1 2) NIL)))))))
 (2 1 #(0 1 0 0)
  ((1 0 #(2 1 0 0)
    ((2 2 #(2 1 1 0) ((1 3 #(2 1 1 2) NIL)))
     (2 3 #(2 1 0 1) ((1 2 #(2 1 2 1) NIL)))))
   (1 2 #(0 1 2 0)
    ((2 0 #(1 1 2 0) ((1 3 #(1 1 2 2) NIL)))
     (2 3 #(0 1 2 1) ((1 0 #(2 1 2 1) NIL)))))
   (1 3 #(0 1 0 2)
    ((2 0 #(1 1 0 2) ((1 2 #(1 1 2 2) NIL)))
     (2 2 #(0 1 1 2) ((1 0 #(2 1 1 2) NIL)))))))
 (2 2 #(0 0 1 0)
  ((1 0 #(2 0 1 0)
    ((2 1 #(2 1 1 0) ((1 3 #(2 1 1 2) NIL)))
     (2 3 #(2 0 1 1) ((1 1 #(2 2 1 1) NIL)))))
   (1 1 #(0 2 1 0)
    ((2 0 #(1 2 1 0) ((1 3 #(1 2 1 2) NIL)))
     (2 3 #(0 2 1 1) ((1 0 #(2 2 1 1) NIL)))))
   (1 3 #(0 0 1 2)
    ((2 0 #(1 0 1 2) ((1 1 #(1 2 1 2) NIL)))
     (2 1 #(0 1 1 2) ((1 0 #(2 1 1 2) NIL)))))))
 (2 3 #(0 0 0 1)
  ((1 0 #(2 0 0 1)
    ((2 1 #(2 1 0 1) ((1 2 #(2 1 2 1) NIL)))
     (2 2 #(2 0 1 1) ((1 1 #(2 2 1 1) NIL)))))
   (1 1 #(0 2 0 1)
    ((2 0 #(1 2 0 1) ((1 2 #(1 2 2 1) NIL)))
     (2 2 #(0 2 1 1) ((1 0 #(2 2 1 1) NIL)))))
   (1 2 #(0 0 2 1)
    ((2 0 #(1 0 2 1) ((1 1 #(1 2 2 1) NIL)))
     (2 1 #(0 1 2 1) ((1 0 #(2 1 2 1) NIL))))))))
CL-USER> (game-tree-last-lenght (game-tree *player-a* '() *default-board*))
((((1) (1)) ((1) (1)) ((1) (1))) (((1) (1)) ((1) (1)) ((1) (1)))
 (((1) (1)) ((1) (1)) ((1) (1))) (((1) (1)) ((1) (1)) ((1) (1))))
; compiling (DEFUN GAME-TREE-LAST-LENGHT ...)
CL-USER> (game-tree-last-lenght (game-tree *player-a* '() *default-board*))

((((1) (1)) ((1) (1)) ((1) (1))) (((1) (1)) ((1) (1)) ((1) (1)))
 (((1) (1)) ((1) (1)) ((1) (1))) (((1) (1)) ((1) (1)) ((1) (1))))
; compiling (DEFUN GAME-TREE-LAST-LENGHT ...)
CL-USER> (game-tree-last-lenght (game-tree *player-a* '() *default-board*))

24
CL-USER> (game-tree *player-a* '() *default-board*)
(1 NIL #(0 0 0 0)
 ((2 0 #(1 0 0 0)
   ((1 1 #(1 2 0 0)
     ((2 2 #(1 2 1 0) ((1 3 #(1 2 1 2) NIL)))
      (2 3 #(1 2 0 1) ((1 2 #(1 2 2 1) NIL)))))
    (1 2 #(1 0 2 0)
     ((2 1 #(1 1 2 0) ((1 3 #(1 1 2 2) NIL)))
      (2 3 #(1 0 2 1) ((1 1 #(1 2 2 1) NIL)))))
    (1 3 #(1 0 0 2)
     ((2 1 #(1 1 0 2) ((1 2 #(1 1 2 2) NIL)))
      (2 2 #(1 0 1 2) ((1 1 #(1 2 1 2) NIL)))))))
  (2 1 #(0 1 0 0)
   ((1 0 #(2 1 0 0)
     ((2 2 #(2 1 1 0) ((1 3 #(2 1 1 2) NIL)))
      (2 3 #(2 1 0 1) ((1 2 #(2 1 2 1) NIL)))))
    (1 2 #(0 1 2 0)
     ((2 0 #(1 1 2 0) ((1 3 #(1 1 2 2) NIL)))
      (2 3 #(0 1 2 1) ((1 0 #(2 1 2 1) NIL)))))
    (1 3 #(0 1 0 2)
     ((2 0 #(1 1 0 2) ((1 2 #(1 1 2 2) NIL)))
      (2 2 #(0 1 1 2) ((1 0 #(2 1 1 2) NIL)))))))
  (2 2 #(0 0 1 0)
   ((1 0 #(2 0 1 0)
     ((2 1 #(2 1 1 0) ((1 3 #(2 1 1 2) NIL)))
      (2 3 #(2 0 1 1) ((1 1 #(2 2 1 1) NIL)))))
    (1 1 #(0 2 1 0)
     ((2 0 #(1 2 1 0) ((1 3 #(1 2 1 2) NIL)))
      (2 3 #(0 2 1 1) ((1 0 #(2 2 1 1) NIL)))))
    (1 3 #(0 0 1 2)
     ((2 0 #(1 0 1 2) ((1 1 #(1 2 1 2) NIL)))
      (2 1 #(0 1 1 2) ((1 0 #(2 1 1 2) NIL)))))))
  (2 3 #(0 0 0 1)
   ((1 0 #(2 0 0 1)
     ((2 1 #(2 1 0 1) ((1 2 #(2 1 2 1) NIL)))
      (2 2 #(2 0 1 1) ((1 1 #(2 2 1 1) NIL)))))
    (1 1 #(0 2 0 1)
     ((2 0 #(1 2 0 1) ((1 2 #(1 2 2 1) NIL)))
      (2 2 #(0 2 1 1) ((1 0 #(2 2 1 1) NIL)))))
    (1 2 #(0 0 2 1)
     ((2 0 #(1 0 2 1) ((1 1 #(1 2 2 1) NIL)))
      (2 1 #(0 1 2 1) ((1 0 #(2 1 2 1) NIL)))))))))
CL-USER> (last '(1 2 3 ((4 ) (5) (6))))
(((4) (5) (6)))
CL-USER> (car (last '(1 2 3 ((4 ) (5) (6)))))
((4) (5) (6))
CL-USER> (last '(1 2 3 (4)))
((4))
CL-USER> (last '(1 2 3 (4 5 6)))
((4 5 6))
; compiling (DEFUN TEST ...)
CL-USER> (last '(1 2 3 (4 5 6)))

((4 5 6))
CL-USER> (game-tree-last-lenght (game-tree *player-a* '() *default-board*))